"book_id","title","description","reviews","content","link","cb_data"
1,"Фаулер - Конкурентное программирование","Если типичную программу на стандартном Python подвергнуть слишком высокой нагрузке, то она будет работать с черепашьей скоростью. Для решения этой проблемы была разработана библиотека asyncio, которая позволяет разбить программу на более мелкие задачи и планировать их выполнение. В итоге получающиеся приложения работают молниеносно и допускают масштабирование.

В этой книге асинхронное, параллельное и конкурентное программирование рассматривается на конкретных примерах. Сложные для понимания вопросы иллюстрируются с помощью диаграмм, позволяющих наглядно представить, как работают задачи. Вы узнаете, как asyncio преодолевает ограничения Python и способствует ускорению медленных веб-серверов и микросервисов. Вы даже научитесь сочетать asyncio с традиционной многопроцессной обработкой, получив в награду резкий скачок производительности.

Для программистов на Python среднего уровня. Опыт работы с конкурентностью не требуется.","Andrey Ved
без практики теория вообще смысла не имеет. 
такой пример, я как бы в теме про асинхрон и тут решил почитать книжку фаулера, но вижу примеры и ловлю ощущение что они могут удивить - начинаю их проверять - и вот поведение у них реальное несколько не то что я ожидал. мораль - за вчера за почти весь день всего 25 страниц от книжки прошёл. 
как тут без практики?","1. Первое знакомство с asyncio.
2. Основы asyncio.
3. Первое приложение asynio.
4. Конкурентные веб-запросы.
5. Неблокирующие драйверы баз данных.
6. Счетные задачи.
7. Решение проблем блокирования с помощью потоков.
8. Потоки данных.
9. Веб-приложения.
10. Микросервисы.
11. Синхронизация.
12. Асинхронные очереди.
13. Управление подпроцессами.
14. Продвинутое использование asyncio.","https://t.me/JuliaLibrary/2","async_cat"
2,"Лутц - Изучаем Python 1","Из-за сложности изложения книга плохо подходит новичкам, но она должна быть в
библиотеке любого Python-разработчика, который хочет стать профессионалом.

В книге глубоко раскрывается большая часть возможностей Python и приводятся
реальные примеры применения языка. Однако оригинал был написан в 2013 году и
некоторые современные возможности Python не рассматриваются.

Во-первых, оригинальная книга, то есть пятое издание на английском языке, вышло
в 2013 году, и оно охватывает Python 3.3. К текущему моменту, то есть к 2020 году,
книга получила несколько апдейтов и должна затрагивать Python 3.7. Однако эти
апдейты условные. Основное же содержание книги не менялось уже 7 лет.

Так в предисловии автор много говорит, о том, что есть две ветки Python: вторая
и третья, и вторая доминирует. Но это уже не так, Python 3 прочно занял место в
продакшене, а Python 2 стремительно уходит в прошлое. Практически все ключевые
библиотеки и фреймворки поддерживают Python 3. Поэтому, конечно, неплохо знать об
отличиях второй и третьей ветки, но в обучении я бы делал упор именно на Python 3.

Во-вторых, Марк Лутц очень подробно описывает, что из себя представляет его книга
и как ей пользоваться. В частности — данная книга не является справочником, а это
скорее учебное пособие. А еще эта книга описывает возможности Python, и не затрагивает
какие-то сторонние библиотеки.","Andrey Ved
книжка лутца по сути ориентирована на мидлов и выше с других языков,
предполагается что человек уже знает за основы программирования (например там не объясняется суть ооп и для чего его придумали и как его кушать) Лутц - это именно описание реализации в конкретном языке программирования. Довольно дотошное и разностороннее описание. Но без понимания основ - это пользы не приносит

Andrey Ved
перед лутцем хорошо бы кучку всего другого уже прочитать-посмотреть.
например ханта - ""программист прогматик"" уже прочитать (и уже будет другой взгляд на ооп)

Andrey Ved
мне кажется что лутца читать в лучшем случае через год знакомства с
питонам - там точно не для начинающих книжка

Andrey Ved
если ты как минимум мидл, пробеги книжку Шапошниковой, а потом
пролистай Свейгарта про автоматизацию рутинных задач, а если захочется глубже
то Бизли книгу рецептов, а если совсем впасть в задротство то ещё двухтомник Лутца.
","1. Python в вопросах и ответах.
2. Как Python выполняет программы.
3. Как пользователь выполняет программы.
4. Введение в типы объектов Python.
5. Числовые типы.
6. Кракто о динамической типизации.
7. Фундаментальные основы строк.
8. Списки и словари.
9. Кортежи, файлы и все остальное.
10. Введение в операторы Python.
11. Операторы присваивания, выражений и вывода.
12. Проверки if и правила синтаксиса.
13. Циклы while и for.
14. Итерации и включения.
15. Документация.
16. Основы функций.
17. Области видимости.
18. Аргументы.
19. Расширенные возможности функций.
20. Включения и генераторы.
21. Оценочные испытания.
22. Модули: общая картина.
23. Основы написания модулей.
24. Пакеты модулей.
25. Расширенные возможности модулей.","https://t.me/JuliaLibrary/21","pybook_cat"
3,"Брэдшоу - MongoDB Полное руководство","В этой книге детально рассматривается обновленная версия MongoDB 4.2 - мощной системы управления базами данных. Вы узнаете о том, как эта безопасная, высокопроизводительная система обеспечивает гибкие модели данных, высокую их доступность и горизонтальную масштабируемость. Авторы представляют руководство для разработчиков баз данных, расширенные настройки для системных администраторов и сценарии использования MongoDB в различных проектах.
Прочитав руководство, вы научитесь:
- работать с MongoDB, выполнять операции записи, находить документы и создавать сложные запросы;
- индексировать коллекции, агрегировать данные и использовать транзакции для своего приложения;
- настраивать набор локальных реплик и оценивать взаимодействие репликации с вашим приложением;
- настраивать компоненты кластера и выбирать ключ шардинга для различных приложений;
- исследовать аспекты администрирования приложений, настраивать аутентификацию и авторизацию;
- использовать статистику при мониторинге, резервном копировании и восстановлении развертываний, а также системные настройки при развертывании MongoDB.","Деды явно знают больше, ждем от них ревью","1. Введение.
2. Начало работы.
3. Создание, обновление и удаление документов.
4. Выполнение запросов.
5. Индексы.
6. Специальные типы индексов и коллекций.
7. Знакомство с фреймворком агрегации.
8. Транзакции.
9. Разработка приложений.
10. Настройка набора реплик.
11. Компоненты набора реплик.
12. Подключение к набору реплик из своего приложения.
13. Администрирование.
14. Знакомство с шардингом.
15. Конфигурирования шардинга.
16. Выбор ключа шардинга.
17. Администрирование шардинга.
18. Смотрим, что делает ваше приложение.
19. Обеспечение безопасности в MongoDB.
20. Долговечность.
21. Настройка MongoDB в рабочем окружении.
22. Мониторинг MongoDB.
23. Создание резервных копий.
24. Развертывание MongoDB.","https://t.me/JuliaLibrary/7","nosql_cat"
4,"Свейгарт - Автоматизация рутинных задач","В полностью переработанном втором издании книги вы узнаете, как использовать Python для написания программ, способных за минуту сделать то, на что раньше уходили часы ручного труда, причем никакого опыта программирования не потребуется! Вы освоите основы Python и исследуете стандартную библиотеку модулей, позволяющих решать самые разнообразные задачи, такие как сбор данных с веб-сайтов, чтение документов в формате PDF и Word и автоматизация щелчков мыши.
Во второе издание книги включена новая глава, посвященная проверке вводимых данных. Также рассмотрены вопросы автоматизации работы с приложениями Gmail и Google Таблицы и даны советы по автоматическому обновлению CSV-файлов. Вы узнаете, как писать программы, которые легко выполняют следующие задачи автоматизации:
поиск текста в файле или в нескольких файлах;
создание, обновление, перемещение и пе- реименование файлов и папок;
поиск в Интернете и загрузка веб-контента;
обработка и шифрование PDF-документов;
рассылка электронной почты и текстовых уведомлений;
заполнение веб-форм.
Пошаговые инструкции помогут лучше понять, как работает та или иная программа, а обновленные учебные проекты в конце каждой главы дадут возможность применить полученные навыки для автоматизации аналогичных задач.
Не тратьте время на выполнение рутинной работы. Даже не имея опыта программиро- вания, благодаря данной книге вы вполне сможете заставить компьютер сделать все необходимое!
2-е издание.","Eugene S.
Вот поэтому и начни со Свейгарта, т.к. он рассчитан не на то, чтобы проф. программированию обучить, а простым людям дать возможность использовать программирование в их обычных делах.
Поэтому там не будет сложных математических и олимпиадных задач, а все сугубо утилитарное. Но при этом ты освоишь основы языка вполне себе в пределах практически первых двух частей Поколения. Потом уже можно будет к нему вернуться и прорешать задачки при желании.
Ну или попробовать их параллельно со Свейгартом проходить.

Andrey Ved
Практика это конечно важней всего - но зачем начинать с джанго? Почему не с простых утилит и той же книжки Свейгарта?

(вспомним адептов самописного букинга и им да не уподобимся)

Eugene S.
если нужно по-быстрому, не сильно влезая в подробности,  просто чтобы начать кодить, причем полезное в хозяйстве, то лучше Свейгарта взять, Автоматизацию рутинных задач.
И в Питон введение, и какие-то полезные штуки сразу освоишь.","1. Основные понятия языка Python.
2. Поток управления.
3. Функции.
4. Списки.
5. Словари и структурирование данных.
6. Манипулирование строками.
7. Поиск по шаблоку с помощью регулярных выражений.
8. Чтение и запись файлов.
9. Управление файлами.
10. Отладка.
11. Автоматический сбор данных в Интернете.
12. Работа с электронными таблицами Excel.
13. Работа с документами в форматах PDF и Word.
14. Работа с CSV-файламаи и данными в формате JSON.
15. Обработка значений даты и времени, планировщие заданий и запуск программ.
16. Отправка сообщений электронной почты и текстовых сообщений.
17. Работа с изображениями.
18. Управление клавиатурой и мышью с помощью средств автоматизации графического интерфейса пользователя.","https://t.me/JuliaLibrary/8","pybook_cat"
5,"Шапошникова - Введение в программирование","все и так понятно, хорошая книжка для новичков","Отзывов не требует. Та книга, с которой следует начать изучать основы языка.","1. Краткая истори языков программирования.
2. Знакомство с Python.
3. Типы данных. Переменные.
4. Ввод и вывод данных.
5. Логические выражения и операторы.
6. Ветвление. Условный оператор.
7. Ошибки и исключения. Обработка исключения.
8. Множественное ветвление: if-elif-else.
9. Циклы в программировании. Цикл while.
10. Функции в программировании.
11. Локальные и глобальные переменные.
12. Возврат значение из функций. Оператор return.
13. Параметры и аргументы функций.
14. Встроенные функции.
15. Модули.
16. Генератор псевдослучайных чисел - random.
17. Списки.
18. Цикл for.
19. Функция enumerate.
20. Строки.
21. Кортежи.
22. Словари.
23. Файлы.
24. Генераторы списков.
25. Матрицы. 
26. Множества. 
27. Особенности работы операторов and и or.
28. Lambda-выражения.","https://t.me/JuliaLibrary/9","kids_cat"
6,"Чакон - Git для профи","Эта книга представляет собой обновленное руководство по использованию Git в современных условиях. С тех пор как проект Git - распределенная система управления версиями - был создан Линусом Торвальдсом, прошло много лет, и система Git превратилась в доминирующую систему контроля версий, как для коммерческих целей, так и для проектов с открытым исходным кодом. Эффективный и хорошо реализованный контроль версий необходим для любого успешного веб-проекта. Постепенно эту систему приняли на вооружение практически все сообщества разработчиков ПО с открытым исходным кодом. Появление огромного числа графических интерфейсов для всех платформ и поддержка IDE позволили внедрить Git в операционные системы семейства Windows. Второе издание книги было обновлено для Git-версии 2.0 и уделяет большое внимание GitHub.","Одна из лучших книг по Git. Обязательна к употреблению.","1. Начало работы.
2. Основы Git.
3. Ветвления в Git.
4. Git на сервере.
5. Распределенная система Git.
6. GitHub.
7. Git-инструментарий.
8. Настройка системы Git.
9. Git и другие системы контроля версий.
10. Git изнутри.","https://t.me/JuliaLibrary/10","git_cat"
7,"Шереметьев - Путь в программисты","Узнайте всю внутреннюю кухню обучения программированию от человека с 23-летним опытом в профессии программиста, преподавателя и руководителя отдела разработки.","Деды не давали на нее отзыв. Возможно стоит узнать в чате, если это необходимо.","1. Зачем становиться программистом?
2. Можете ли вы стать программистом?
3. Есть ли особые требования к изучению программирования?
4. Большой барьер программиста.
5. Нужно ли официльное образование?
6. Организация занятий.
7. Секрет быстрого продвижения.
8. Сколько времени это займет?
9. Увлечение технологиями.
10. Что изучать в первую очередь?
11. Путь в профессию программиста.
12. Направления дальнейшего развития.
","https://t.me/JuliaLibrary/11","start_cat"
8,"Персиваль - Паттерны разработки","Популярность Python продолжает расти, а значит, проекты, созданные на этом языке программирования, становятся все масштабнее и сложнее. Многие разработчики проявляют интерес к высокоуровневым паттернам проектирования, таким как чистая и событийно-управляемая архитектура и паттерны предметно-ориентированного проектирования (DDD). Но их адаптация под Python не всегда очевидна.

Гарри Персиваль и Боб Грегори познакомят вас с проверенными паттернами, чтобы каждый питонист мог управлять сложностью приложений и получать максимальную отдачу от тестов. Теория подкреплена примерами на чистом Python, лишенном синтаксической избыточности Java и C#.

В этой книге:
- ""Инверсия зависимостей"" и ее связи с портами и адаптерами (гексагональная/чистая архитектура).
- Различия между паттернами ""Сущность"", ""Объект-значение"" и ""Агрегат"" в рамках DDD.
- Паттерны ""Репозиторий"" и UoW, обеспечивающие постоянство хранения данных.
- Паттерны ""Событие"", ""Команда"" и ""Шина сообщений"".
- Разделение ответственности на команды и запросы (CQRS).
- Событийно-управляемая архитектура и реактивные расширения.","Деды явно знают больше, ждем от них ревью","1. Моделирование предметной области.
2. Паттерн ""Репозиторий"".
3. О связанности и абстракциях.
4. Первый вариант использование: API фреймворка Flask и сервисный слой.
5. TDD на повышенной и пониженной передачах.
6. Паттерн UoW.
7. Агрегаты и границы  согласованности.
8. События и шина сообщений.
9. Катимся в город на шине сообщений.
10. Команды и обработчик команд.
11. Событийно-управляемая архитектура: использование событий для интеграции микросервисов.
12. Разделение обязанностей команд и запросов.
13. Внедрение зависимостей (и начальная загрузка).","https://t.me/JuliaLibrary/12","pybook_cat"
9,"Персиваль - Разработка на основе тестирования","Проводя вас по процессу разработки реального веб-приложения от начала до конца, второе издание книги демонстрирует преимущества методологии разработки на основе тестирования (TDD) с использованием языка Python. Вы научитесь писать и выполнять тесты до написания любого фрагмента вашего приложения и затем разрабатывать минимальный объем программного кода, необходимого для прохождения этих тестов. В результате вы получите чистый программный код, который работает!
Также вы узнаете основы Django, Selenium, Git, jQuery и Mock. Если вы готовы поднять свои навыки программирования на Python на следующий уровень, то эта книга - обновленная до Python 3.6 - продемонстрирует вам, как методология TDD способствует созданию простой структуры кода и вселяет в вас уверенность в своих силах.","Eugene S.
Так ты попробуй в TDD, а не после написания проекта тесты писать - решил что-то добавить, забабахай сначала тесты для этого, а походу дела сразу тестируй написанное. Тут слон не целиком, а по кускам съеден будет. Проще, чем потом все скопом покрывать.
","1. Настройка Django с использованием функционального теста.
2. Расширение фунционального теста при помощи модуля unittest.
3. Тестирование простой домашней страницы при помощи модульных тестов.
4. И что же делать со всеми этими тестами (и рефакторизацией)?
5. Сохранение вводимых пользователем данных: тестирование базы данных.
6. Усовершенствование функциональных тестов: обеспечение изоляции и удаление методов sleep.
7. Работа в инрементном режиме.
8. Придание привлекательно вида: макет, стилевое оформление сайта и что тут тестировать.
9. Тестирование развертывания с использованием промежуточно сайта.
10. Переход к развертыванию, готовому к эксплуатации.
11. Автоматизация развертывания с помощью Fabric.
12. Разделение тестов на многочисленные файлы и обобщенный помощник ожидания.
13. Валидация на уровне базы данных.
14. Простая форма.
15. Более развитые формы.
16. Пробуем окунуться, очень робко, в JavaScript.
17. Основы TDD и Django.
18. Использование имитаций для тестирования внешних зависимостей или сокращения дублирования.
19. Тестовые фикстуры и декоратор для явных ожиданий.
20. Тестовые фикстуры и декоратор для явных ожиданий.
21. Отладка на стороне сервера.
22. Завершение приложения ""Мои списки"": TDD с подходом ""Снаружи внутрь"".
23. Изоляция тестов и ""слушание своих тестов"".
24. Непрерывная интеграция.
25. Социально значимый кусок, шаблок проектирования ""Страница"" и упраженение для читателя. 
26. Быстрые тесты, медленные тесты и горячий поля.","https://t.me/JuliaLibrary/13","django_cat"
10,"Моргунов - PostgreSQL","Учебно-практическое пособие охватывает первую, базовую, часть учебного курса по языку SQL, созданного при участии российской компании Postgres Professional. Учебный материал излагается в расчете на использование системы управления базами данных PostgreSQL. Рассмотрено создание рабочей среды, описан язык определения данных и основные операции выборки и изменения данных. Показаны примеры использования транзакций, уделено внимание методам оптимизации запросов. Материал сопровождается многочисленными практическими примерами. Пособие может использоваться как для самостоятельного обучения, так и проведения занятий под руководством преподавателя.","Отзывов пока что нет, но это можно исправить, задав вопрос в чате.","1. Введение в базы данных и SQL.
2. Создание рабочей среды.
3. Основные операции с таблицами.
4. Типы данных СУБД PosgreSQL.
5. Основы языка определения данных.
6. Запросы.
7. Изменение данных.
8. Индексы.
9. Транзакции.
10. Повышение производительности.","https://t.me/JuliaLibrary/14","sql_cat"
11,"Бхаргава - Грокаем алгоритмы","Алгоритмы - это всего лишь пошаговые алгоритмы решения задач, и большинство таких задач уже были кем-то решены, протестированы и проверены. Можно, конечно, погрузится в глубокую философию гениального Кнута, изучить многостраничные фолианты с доказательствами и обоснованиями, но хотите ли вы тратить на это свое время? Откройте великолепно иллюстрированную книгу и вы сразу поймете, что алгоритмы - это просто. А грокать алгоритмы - это веселое и увлекательное занятие.","Алгоритмы - важны для программиста, а это лучшая книга для начала их изучения с нуля.
","1. Знакомство с алгоритмами.
2. Сортировка выбором.
3. Рекурсия.
4. Быстрая сортировка.
5. Хеш-таблицы.
6. Поиск в ширину.
7. Алгоритм Дейкстры.
8. Жадные алгоритмы.
9. Динамическое програмиирование.
10. Алгоритм k ближайших соседей.
11. Что дальше?","https://t.me/JuliaLibrary/15","algorithms_cat"
12,"Болье - Изучаем SQL","Нынешний век можно без преувеличения назвать веком информации, но информация без возможности ее выборки и обработки - это не более чем просто набор байтов в хранилищах данных. Такую возможность эффективной выборки и обработки данных уже несколько десятилетий предоставляет разработчикам язык SQL. Он тесно связан с реляционными базами данных. Но несмотря на это в последнее время, когда все большее значение приобретают большие объемы данных, упомянутый язык развивается таким образом, чтобы облегчить поиск данных в базах данных, построенных на различных технологиях. Данная книга отличается широким охватом как тем (от азов SQL до таких сложных вопросов, как аналитические функции и работа с большими базами данных), так и конкретных баз данных (MySQL, Oracle Database, SQL Server) и особенностей реализации тех или иных функциональных возможностей SQL на этих серверах. Книга идеально подходит в качестве учебника для начинающего разработчика в области баз данных. В ней описаны все возможные применения языка SQL и наиболее распространенные серверы баз данных.
3-е издание.","Конкретных отзывов пока что нет( но это можно исправить!","1. Небольшая предыстория.
2. Создание и наполнение базы данных.
3. Запросы.
4. Фильтрация.
5. Запросы к нескольким таблицам.
6. Работа с множествами.
7. Генерация, обработка и преобразование данных.
8. Группировка и агрегация.
9. Подзапросы.
10. Соединения.
11. Условная логика.
12. Транзакции.
13. Индексы и ограничения.
14. Представления.
15. Метаданные.
16. Аналитические функции.
17. Работа с большими базами данных.
18. SQL и большие данные.","https://t.me/JuliaLibrary/16","sql_cat"
13,"Постолит - Python, Django и PyCharm","Книга посвящена вопросам разработки веб-приложений с использованием языка Python, фреймворка Django и интерактивной среды разработки PyCharm. Рассмотрены основные технологии и рабочие инструменты создания приложений, даны основы языка Python. Описаны фреймворк Django и структура создаваемых в нем веб-приложений. На простых примерах показаны обработка и маршрутизация запросов пользователей, формирование ответных веб-страниц. Рассмотрено создание шаблонов веб-страниц и форм для пользователей. Показано взаимодействие пользователей с различными типами баз данных через модели. Описана работа с базами данных через встроенные в Django классы без использования SQL-запросов. Приведен пошаговый пример создания сайта от формирования шаблона до его администрирования и развертывания в сети Интернет. Электронный архив на сайте издательства содержит коды всех примеров.","Деды еще не делилсь своим мнением по этой книге...","1. Веб-технологии и инструментальне средства для разработки веб-приложений.
2. Основы языка программирования Python.
3. Знакомимся с веб-фремворком Django.
4. Представления и маршрутизация.
5. Шаблоны.
6. Формы.
7. Модели данных Django.
8. Пример создания веб-сайта на Django.
9. Пример создания веб-интерфейса для пользователей сайта ""мир книг"".
10. Расширение возможностей для администрирования сайта ""Мир книг"" и создание пользовательских форм.
11. Публикация сайта в сети Интернет.","https://t.me/JuliaLibrary/17","django_cat"
14,"Okken - Python Testing with pytest","Do less work when testing your Python code, but be just as expressive, just as elegant, and just as readable. The pytest testing framework helps you write tests quickly and keep them readable and maintainable - with no boilerplate code. Using a robust yet simple fixture model, it's just as easy to write small tests with pytest as it is to scale up to complex functional testing for applications, packages, and libraries. This book shows you how.

For Python-based projects, pytest is the undeniable choice to test your code if you're looking for a full-featured, API-independent, flexible, and extensible testing framework. With a full-bodied fixture model that is unmatched in any other tool, the pytest framework gives you powerful features such as assert rewriting and plug-in capability - with no boilerplate code.

With simple step-by-step instructions and sample code, this book gets you up to speed quickly on this easy-to-learn and robust tool. Write short, maintainable tests that elegantly express what you're testing. Add powerful testing features and still speed up test times by distributing tests across multiple processors and running tests in parallel. Use the built-in assert statements to reduce false test failures by separating setup and test failures. Test error conditions and corner cases with expected exception testing, and use one test to run many test cases with parameterized testing. Extend pytest with plugins, connect it to continuous integration systems, and use it in tandem with tox, mock, coverage, unittest, and doctest.

Write simple, maintainable tests that elegantly express what you're testing and why.","Можете не сомневаться в полезности данной книги, она гарантированно должна быть в ваших планах. Для удобства ориентирования я написал небольшой мануал по книге, с которым можно ознакомиться по ссылке:
https://github.com/Harlok13/br_okken_pytest
Буду рад, если вы его оцените!","1. Getting Started with pytest.
2. Writing Test Functions.
3. pytest Fixtures.
4. Builtin Fixtures.
5. Paramerization.
6. Markers.
7. Strategy.
8. Configuration Files.
9. Coverage.
10. Mocking.
11. tox and Continuos Integration.
12. Testing Scripts and Applications.
13. Debugging Test Failures.
14. Third-Party Plugins.
15. Building Plugins.
16. Advanced Paramerization.","https://t.me/JuliaLibrary/18","tests_cat"
15,"Абдрахманов - Работа с данными","Книга посвящена библиотеке для работы с данным pandas. Помимо базовых знаний о структурах pandas, вы получите информацию о том как работать с временными рядами, считать статистики, визуализировать данные и т.д.. Большое внимание уделено практике, все рассматриваемые возможности библиотеки сопровождаются подробными примерами.","Деды явно знают больше, ждем от них ревью","1. Структуры данных в Pandas: Series и DataFrame.
2. Структура данных DataFrame.
3. .Типы данных в pandas
4. Pandas и отсутствующие данные.
5. Работа со структурами данных в pandas: удаление, объединение, расширение, группировка.
6. Работа с внешними источниками данных.
7. Операции над данными.
8. Настройка pandas.
9. Инструменты для работы с данными.
10. Временные ряды.
11. Визуализация данных.
12. Настройка внешнего вида таблиц.
","https://t.me/JuliaLibrary/19","pandas_cat"
16,"Лутц - Изучаем Python 2","С помощью этой практической книги вы получите всестороннее и глубокое введение в основы языка Python. Будучи основанным на популярном учебном курсе Марка Лутца, обновленное 5-е издание книги поможет вам быстро научиться писать эффективный высококачественный код на Python. Она является идеальным способом начать изучение Python, будь вы новичок в программировании или профессиональный разработчик программного обеспечения на других языках.
Это простое и понятное учебное пособие, укомплектованное контрольными вопросами, упражнениями и полезными иллюстрациями, позволит вам освоить основы линеек Python 3.X и 2.X. Вы также ознакомитесь с расширенными возможностями языка, получившими широкое распространение в коде Python.
Благодаря книге вы:
Исследуете основные встроенные типы объектов Python, такие как числа, списки и словари
Научитесь создавать и обрабатывать объекты с помощью операторов Python и освоите общую синтаксическую модель Python
Сможете применять функции для устранения избыточности кода и упаковки кода с целью многократного использования
Узнаете, как организовывать операторы, функции и прочие инструменты в более крупные компоненты посредством модулей
Погрузитесь глубже в классы - инструмент объектно-ориентированного программирования Python для структурирования кода
Научитесь писать крупные программы с применением модели обработки исключений и инструментов разработки Python
Освоите более сложные инструменты Python, включая декораторы, дескрипторы, метаклассы и обработку Unicode
""Книга Learning Python находится в начале моего списка рекомендованной литературы для любого, кто желает научиться программировать на Python.""
Дуг Хеллманн
старший инженер-программист, Racemi, Inc.
Об авторе
Марк Лутц является мировым лидером в обучении языку Python, автором самых ранних и ставших бестселлерами книг по Python, а также первопроходцем в сообществе Python, начиная с 1992 года.
Обладая более чем 30-летним опытом разработки, Марк был автором книг Programming Python, 4th Edition и Python Pocket Reference, 4th Edition издательства O'Reilly.
5-е издание.","Классам в книге уделено более 300 страниц. Это и стандартные возможности,
и перегрузка операций, и колбэки, и делегирование, фабрики, декораторы,
слоты, в общем всё что есть в Python.

После классов и исключений идут еще более сложные темы: байтовые строки,
расширенные возможности декораторов, метаклассы.

С некоторыми возможностями в реальности вы можете никогда не столкнуться,
например, с теми же метаклассами. Другие темы могут показаться вам странными
или малоприменимыми.

Например, в главе по байтовые строки, есть небольшой блок про маркеры BOM
или по-другому маркеры порядка байтов. Маркер BOM — это специальный символ,
который вставляется в текстовый документ, чтобы указать как в нем расположены
байты. Этот символ добавляется далеко не всегда и основная проблема в том,
что при открытии файла в текстовом редакторе, текстовый редактор этот
символ не выводит, что может доставить массу неприятностей при программной
обработке.","26. Объектно-ориентированное программирование: общая картина.
27. Основы написания классов.
28. Более реалистичный пример.
29. Детали реализации классов.
30. Перегрузка операций.
31. Проектирование с использованием классов.
32. Расширенные возможности классов.
33. Основы исключений.
34. Детали обработки исключений.
35. Объекты исключений.
36. Проектирование с использованием исключений.
37. Unicode и байтовые строки.
38. Управляемые атрибуты.
39. Декораторы.
40. Метаклассы.
41. Все хорошее когда-нибудь заканчивается.","https://t.me/JuliaLibrary/20","pybook_cat"
17,"Шоттс - Командная строка LINUX","Международный бестселлер ""Командная строка Linux"" поможет преодолеть путь от первых робких щелчков по клавишам до уверенного создания полноценных программ для последней версии bash - наиболее популярной командной оболочки Linux.
Второе издание рассказывает о новых возможностях bash 4.x, таких как новые операторы перенаправления и операции подстановки. В разделе, посвященном сценариям оболочки, рассматриваются современные надежные методы программирования, способы предотвращения типичных ошибок и потенциально опасных ситуаций.
Вы освоите неустаревающие навыки владения командной строкой: навигацию по файловой системе, настройку окружения, объединение команд в цепочки и сопоставление с регулярными выражениями. Вы постигните философию, лежащую в основе многих инструментов командной строки, разберетесь с богатым наследием, полученным от суперкомпьютеров с Unix, и приобщитесь к знаниям, накопленным поколениями гуру, исключивших мышь из своего арсенала инструментов.
Их коротких и простых глав, вы узнаете, как:
- создавать и удалять файлы, каталоги и символические ссылки;
- администрировать свою систему, от работы с сетью до установки пакетов и управления процессами;
- использовать стандартный ввод и вывод, перенаправление и конвейеры;
- редактировать файлы с помощью vi, самого популярного в мире текстового редактора;
- писать сценарии командной оболочки для автоматизации рутинных задач;
- манипулировать содержимым текстовых файлов с помощью cut, paste, grep, patch и sed.
Преодолев первый ""шок командной оболочки"", вы поймете, насколько естественным и логичным является этот способ взаимодействия с компьютером.
2-е международное издание.","Деды явно знают больше, ждем от них ревью","1. Что такое командная оболочка.
2. Навигация.
3. .Исследование системы
4. Операции с фйлами и каталогами.
5. Работа с командами.
6. Перенаправление.
7. Взгляд на мир глазами командной оболочки.
8. Продвинутые приемы работы с клавиатурой.
9. Привилегии.
10. Процессы.
11. Окружение.
12. Плавное введение в vi.
13. Настройка приглашения к вводу.
14. Управления пакетами.
15. Устройства хранения.
16. Сети.
17. Поиск файлов.
18. Архивация и резервное копирование.
19. Регулярные выражения.
20. Обработка текста.
21. Форматирование вывода.
22. Печать.
23. Компиляция программ.
24. Создание первого сценария командной оболочки.
25. Начало проекта.
26. Проектирование сверху вних.
27. Управление потоком выполнения: ветвление с помощью case.
28. Чтение ввода с клавиатуры.
29. Управление потоком выполнения: циклы while и until.
30. Поиск и устранение ошибок.
31. Управление потоком выполнения: ветвление с помощью case.
32. Позиционные параметры.
33. Управление потоком выполнения: цикл for.
34. Строки и числа.
35. Массивы.
36. Экзотика.","https://t.me/JuliaLibrary/22","linux_cat"
18,"Майер - Однострочники Pyhon.","Краткость - сестра программиста. Эта книга научит вас читать и писать лаконичные и функциональные однострочники. Вы сможете системно разбирать и понимать код на Python, а также писать выразительно и компактно, как настоящий эксперт.
Здесь вы найдете приёмы и хитрости написания кода, регулярные выражения, примеры использования однострочников в различных сферах, а также полезные алгоритмы. Подробные пояснения касаются, в том числе, и важнейших понятий computer science, что поспособствует вашему росту в программировании и аналитике.","Деды явно знают больше, ждем от них ревью","1. Краткая памятка по Python.
2. Трюки Python.
3. Наука о данных.
4. Машинное обучение.
5. Регулярные выражения.
6. Алгоритмы.","https://t.me/JuliaLibrary/23","pybook_cat"
19,"Шпигорь - Программирование на Bash","Эта книга предлагает следующий подход. Она начинается, как это принято, с общей теории о том, как устроен и работает компьютер. При этом внимание уделяется причинам тех или иных технических решений прошлых лет, которые определили основные функции современного компьютера. Знание этих причин поможет вам лучше запомнить материал и понять предмет.

Общие знания о компьютерной технике окажутся полезны, когда вы начнёте программировать на конкретном языке. Вы обязательно столкнётесь с проблемами. Например, программа работает слишком медленно или постоянно завершается с ошибкой. Знание устройства компьютера поможет вам понять причины такого поведения.

Дальше мы познакомимся с языком программирования Bash. Вопреки распространённому мнению, это сложный предметно-ориентированный язык. Однако, ряд задач решается на нём сравнительно легко и лаконично. На примере этих задач мы изучим базовые концепции программирования.

Прежде всего мы рассмотрим Bash как замену графическому интерфейсу пользователя. Вы научитесь выполнять основные операции над файлами и каталогами с помощью текстовых команд. Таким образом вы освоите минимальный синтаксис. Его будет достаточно для написания программ на Bash.","Деды явно знают больше, ждем от них ревью","1. Общая информация.
2. Командный интерпретатор Bash.
3. Разработка Bash-скриптов.
4. Пакетный менеджер.
","https://t.me/JuliaLibrary/26","linux_cat"
20,"Столяров - Азы программирования.","Первый том серии ""Программирование: введение в профессию"" включает две основные части.
В первую часть книги вошли избранные сведения из истории вычислительной техники, обсуждение не-которых областей математики, непосредственно используемых программистами (таких как алгебра логики, комбинаторика, позиционные системы счисления), математических основ программирова-ния (теория вычислимости и теория алгоритмов), принципы построения и
Учебник ""Программирование: введение в профессию"" ориентирован на самостоятельное изучение и предполагает изучение и использование систем Unix (в т. ч. Linux) в роли сквозной среды для обучения.
Первый том учебника содержит три части, охватывающие базис знаний о программировании как виде деятельности: в первую часть вошли вводные сведения, вторая посвящена основам программирования на примере языка Pascal, третья - возможностям центрального процессора и программированию на языке ассемблера.
Издание предназначено школьникам старших классов, студентам, преподавателям, а также всем читателям, кто желает стать квалифицированным программистом.","Деды явно знают больше, ждем от них ревью","1. Предварительные сведения.
2. Язык Паскаль и начала программирования.
3. Возможности процессора и язык ассемблера.
","https://t.me/JuliaLibrary/27","start_cat"
21,"Столяров - Системы и сети.","Учебник ""Программирование: введение в профессию"", ориентированный на самостоятельное изучение, предполагает использование систем семейства Unix (в т.ч. Linux) в роли сквозной среды для обучения.
Во второй том вошли части посвящённые языку Си, основным возможностям операционной системы, взаимодействию программ через компьютерные сети, параллельному программированию и внутреннему устройству ядра операционной системы.
Издание предназначено школьникам старших классов, студентам, преподавателям, а также всем читателям, кто желает стать квалифицированным программистом.","Деды явно знают больше, ждем от них ревью","4. Программирование на языке Си.
5. Объекты и услуги операционной системы.
6. Сети и протоколы.
7. Параллельные программы и разделяемые данные.
8. Ядро системы: взгляд за кулисы.","https://t.me/JuliaLibrary/28","start_cat"
22,"Столяров - Парадигмы","Учебник ""Программирование: введение в профессию"", ориентированный на самостоятельное изучение, предполагает использование систем семейства Unix (в т.ч. Linux) в роли сквозной среды для обучения.
Третий том посвящён высокоуровневому программированию и возможным подходам к осмыслению программы и её исполнения, известным как ""парадигмы программирования"". Рассматриваются языки C++, Lisp, Scheme, Prolog, Hope и Tcl; дополнительно показано создание графических пользовательских интерфейсов с помощью библиотеки FLTK для C++, а также фреймфорка Tcl/Tk.
Издание предназначено школьникам старших классов, студентам, преподавателям, а также всем читателям, кто желает стать квалифицированным программистом.","Деды явно знают больше, ждем от них ревью","9. Парадигмы в мышлении программиста.
10. Язык Си++, ООп и АТД.
11. Неразрушающие парадигмы.
12. Компиляция, интерпретация, скриптинг.","https://t.me/JuliaLibrary/29","start_cat"
23,"Хант - Программист прагматик","В этом втором, обновленном через 20 лет издании авторы предлагают прагматичный философский подход к разработке программного обеспечения, исходя из своего богатого практического опыта. Книга написана в виде последовательного ряда автономных тем-разделов, сдобрена немалой долей классических и свежих анекдотов, тщательно продуманными примерами и интересными аналогиями, демонстрируя наилучшие методики разработки программного обеспечения и основные ловушки на пути к написанию гибкого, легко приспосабливающегося к новым требованиям и повторно используемого кода. Она поможет читателю выработать и развить навыки и знания как основание для его успешной карьеры в долгосрочной перспективе.
Книга адресована тем, кто стремится совершенствоваться в разработке программного обеспечения, чтобы в конечном счете стать программистом-прагматиком.","Деды явно знают больше, ждем от них ревью","1. Философия прагматизма.
2. Прагматичный подход.
3. Основные инстументальные средства.
4. Прагматичная паранойя.
5. Гибкость и ломкость.
6. Параллельность.
7. По ходу кодирования.
8. До начала проекта.
9. Прагматичные проекты.","https://t.me/JuliaLibrary/32","pybook_cat"
24,"Эрик Метиз - Изучаем Python","""Изучаем Python"" - это самое популярное в мире руководство по языку Python. Вы сможете не только максимально быстро его освоить, но и научитесь писать программы, устранять ошибки и создавать работающие приложения.
В первой части книги вы познакомитесь с основными концепциями программирования, такими как переменные, списки, классы и циклы, а простые упражнения приучат вас к шаблонам чистого кода. Вы узнаете, как делать программы интерактивными и как протестировать код, прежде чем добавлять в проект. Во второй части вы примените новые знания на практике и создадите три проекта: аркадную игру в стиле Space Invaders, визуализацию данных с удобными библиотеками Python и простое веб-приложение, которое можно быстро развернуть онлайн.
Работая с книгой, вы научитесь:
- Использовать мощные библиотеки и инструменты Python: Pygame, Matplotlib, Plotly и Django
- Создавать 2D-игры разной сложности, которыми можно управлять с клавиатуры и мыши
- Создавать интерактивную визуализацию данных
- Разрабатывать, настраивать и развертывать веб-приложения
- Разбираться с багами и ошибками
Новое издание было тщательно переработано и отражает последние достижения в практиках программирования на Python. Первая часть книги была дополнена новой информацией о f-строках, константах и управлении данными. Во второй части был обновлен код проектов. Структура проектов и код стали более чистыми и понятными, теперь они используют всю мощь популярных библиотек и инструментов, таких как Plotly и Django. (Полный список обновлений можно найти в предисловии.)
Если вы подумываете ""А не заняться ли мне программированием?"", то эта книга - идеальный старт. Не нужно больше ждать! Погнали!
3-е издание.","Деды явно знают больше, ждем от них ревью","1. Первые шаги.
2. Переменные и простые типы данных.
3. Списки.
4. Работа со списками.
5. Команды if.
6. Словари.
7. Ввод и циклы while.
8. Функции.
9. Классы.
10. Файлы и исключения.
11. Тестирование.
12. Инопланетное вторжение.
13. Осторожно, пришельцы!.
14. Ведение счета.
15. Генерирование данных.
16. Загрузка данных.
17. Работа с API.
18. Знакомство с Django.
19. Учетные записи пользователей.
20. Оформление и развертывание приложения.","https://t.me/JuliaLibrary/33","pybook_cat"
25,"Свейгарт - Чистый код ","Вы прошли обучающий курс программирования на Python или прочли несколько книг для начинающих. Что дальше? Как подняться над базовым уровнем, превратиться в крутого разработчика?

""Python. Чистый код для продолжающих"" - это не набор полезных советов и подсказок по написанию чистого кода. Вы узнаете о командной строке и других инструментах профессионального разработчика: средствах форматирования кода, статических анализаторах и контроле версий. Вы научитесь настраивать среду разработки, давать имена переменным и функциям, делающие код удобочитаемым, грамотно комментировать и документировать ПО, оценивать быстродействие программ и сложность алгоритмов, познакомитесь с ООП.

Такие навыки поднимут вашу ценность как программиста не только в Python, но и в любом другом языке.

Ни одна книга не заменит реального опыта работы и не превратит вас из новичка в профессионала. Но ""Чистый код для продолжающих"" проведет вас чуть дальше по этому пути: вы научитесь создавать чистый, грамотный, читабельный, легко отлаживаемый код, который можно будет назвать истинно питоническим.","Деды явно знают больше, ждем от них ревью","1. Обработка ошибок и обращение за помощью.
2. Подготовка среды и командная строка.
3. Форматирование кода при помощи Black.
4. Выбор понятных имен.
5. Поиск запахов в коде.
6. Написание питонического кода.
7. Жаргон программистов.
8. Часто встречающиеся ловушки Python.
9. Экзотические странности Python.
10. Написание эффективных функция.
11. Комментарии, doc-строки и аннотации типов.
12. Git и организация программных проектов.
13. Измерение быстродействия и анализ сложности алгоритмов.
14. Проекты для тренировки.
15. Объектно-ориентрованное программирование и классы.
16. Объектно-ориентированное программирование и наследования.
17. ООП в Python: свойства и dunder-методы.","https://t.me/JuliaLibrary/34","pybook_cat"
26,"Бизли - Python Книга рецептов","Книга, которую вы держите в руках, даст четкое понимание, как именно стоит писать приложения на Python, чтобы не пришлось раз за разом их переделывать и они были удобны для работы. Это наиболее полное и систематичное руководство по Python, в нем разобраны самые популярные подходы для создания легкочитаемого, оптимизированного и поддерживаемого кода. Также приведены примеры применения полученных знаний в прикладных областях, все главы сопровождаются конкретными заданиями.
Издание будет полезно как начинающим разработчикам, так и опытным специалистам.","Andrey Ved
возьми например книжку - бизли ""книга рецептов""  и поужасайся. то
что питон позволяет сходу хелоу ворд написать совсем не отменяет того что в
глубине океана чудища живут

Andrey Ved
в питон вставляют куски на си. можно почитать об этом в книжке Бизли - Питон
книга рецептов

Andrey Ved
учу тут последние пару недель асинхрон и многопоточность (и это близко не одно и тоже)
тем кто наступит в туже яму хочу посоветовать пробежаться в след последовательности:
- ютуб шад курсы про паралельность
- ютуб свиридов
- ютуб молчанов
- глава в книжке бизли - питон книга рецептов

Andrey Ved
я тут бизли как раз долистал (теперь когда при мне говорят что питон это просто у меня
глаз дёргаться начинает)","1. Структуры данных и лагоритмы.
2. Строки и текст.
3. Числа, даты и время.
4. Итераторы и генераторы.
5. Файлы и ввод-вывод.
6. Кодирование и обработка данных.
7. Функции.
8. Классы и объекты.
9. Метапрограммирование.
10. Модули и пакеты.
11. Сети и веб-программирование.
12. Конкурентность.
13. Полезные скрипты и системное администрирование.
14. Тестирование, отладка и исключения.
15. Расширения на языке С.","https://t.me/JuliaLibrary/36","pybook_cat"
28,"Скиена - Наука о данных.","Для того чтобы понять мир, необходимо собрать и проанализировать данные о нем. Объединение последних технологических тенденций предоставляет новые возможности для применения анализа данных к более сложным задачам, чем когда-либо прежде.
Емкость компьютерных хранилищ увеличивается экспоненциально; хранение данных сейчас стало настолько дешевым, что компьютерным системам почти невозможно ничего забыть. Сенсорные устройства все шире и шире контролируют все, за чем только можно наблюдать: потоки видео, действия в социальных сетях и местоположение всего, что перемещается. Сетевая вычислительная среда позволяет использовать огромные количества машин для манипулирования этими данными. Каждый раз, когда вы осуществляете поиск в Google, задействуются сотни компьютеров, тщательно исследующие все ваши предыдущие действия, только для того, чтобы решить, какая реклама является наилучшей для демонстрации именно вам.
Результатом всего этого стало рождение науки о данных - новой области, посвященной максимизации значения обширных коллекций информации. Как дисциплина, наука о данных находится где-то на пересечении статистики, информатики и машинного обучения, но стоит она отдельно, как самостоятельный персонаж. Эта книга служит введением в науку о данных, сосредоточиваясь на навыках и принципах, необходимых для построения систем, предназначенных для анализа и интерпретации данных.","Деды явно знают больше, ждем от них ревью","1. Что такое наука о данных?
2. Математические основы.
3. Манипулирование данными.
4. Оценки и ранги.
5. Статистический анализ.
6. Визуализация данных.
7. Математические модели.
8. Линейная алгебра.
9. Линейная и логистическая регрессия.
10. Методы измерения расстояний и сетей.
11. Машинное обучение.
12. Большие данные: достижене крупного масштаба.
13. Заключение.
14. Список литературы.","https://t.me/JuliaLibrary/37","ml_cat"
29,"Бен Форта - SQL за 10 минут.","Хорошее знание SQL требуется всем, кто работает с базами данных, включая разработчиков приложений, веб- дизайнеров, администраторов СУБД и даже пользователей Microsoft Office. В книге предлагаются готовые решения для тех, кто хочет быстро получить результат.

Эксперт по базам данных Бен Форта расскажет обо всем, что касается основ SQL: от простых запросов на выборку данных до более сложных тем, таких как соединения, подзапросы, хранимые процедуры, курсоры, триггеры и табличные ограничения. Все темы последовательно излагаются в виде простых и коротких уроков, на каждый из которых уйдет не более 10 минут. Большинство уроков дополняется упражнениями, предназначенными для закрепления материала.

Что можно узнать за 10 минут:
Основные инструкции SQL
Создание сложных запросов с множеством предложений и операторов
Извлечение, сортировка и форматирование данных
Фильтрация результатов запроса
Применение итоговых функций для получения сводных данных
Соединение таблиц
Добавление, обновление и удаление данных
Создание и изменение таблиц
Работа с представлениями, хранимыми процедурами и триггерами
5-е издание.","Деды явно знают больше, ждем от них ревью","1. Основы SQL.
2. Извлечение данных из таблиц.
3. Сортировка полуенных данных.
4. Фильтрация данных.
5. Расширенная фильтрация данных.
6. Фильтрация с использованием метасимволов.
7. Создание вычисляемых полей.
8. Использование функций обработки данных.
9. Итоговые вычисления.
10. Группировка данных.
11. Подзапросы.
12. Объединение таблиц.
13. Создание расширенных объединений.
14. Комбинированные запросы.
15. Добавление данных.
16. Обновление и удаление данных.
17. Создание таблиц и работа с ними.
18. Представления.
19. Хранимые процедуры.
20. Обработка транзакций.
21. Курсоры.
22. Расширенные возможности SQL.","https://t.me/JuliaLibrary/38","sql_cat"
30,"Омельяненко - Эволюционные нейросети","Эта книга дает всестороннее представление о нейроэволюции - подходе к обучению искусственных нейронных сетей, который использует эволюционные алгоритмы, чтобы упростить процесс решения сложных задач в таких областях, как игры, робототехника и моделирование естественных процессов.
Читатель начнет знакомство с ключевыми концепциями и ме-тодами нейроэволюции, написав несложный код на языке Python, а затем получит практический опыт работы с популярными библиотеками Python и научится решать распространенные и нестандартные прикладные задачи, используя алгоритмы на основе нейроэволюции. Речь пойдет о том, как адаптировать методы нейроэволюции к существующим проектам нейронных сетей для повышения эффективности обучения и принятия решений; в завершение будет рассказано о топологиях нейрон-ных сетей и о том, как нейроэволюция позволяет развивать сложную топологию из простейшей базовой структуры.
Издание предназначено для специалистов в области машинного обучения и искусственного интеллекта, которые стремятся реализовать алгоритмы нейроэволюции с нуля. Наличие базовых знаний в области глубокого обучения и нейронных сетей, а также программирования на языке Python обязательно","Деды явно знают больше, ждем от них ревью","1. Обзор методов нейроэволюции.
2. Библиотеки Python и настройка среды разработки.
3. Использование NEAT для оптимизации решения задачи XOR.
4. Балансировка тележки с обратным маятником.
5. Автономное прохождение лабиринта.
6. Метод отпитмизации поиском новизны.
7. Зрительное различение с NEAT на основе гиперкуба.
8. Метод ES-HyperNEAR  и задача сетчатки.
9. Коэволюция и метод SAFE.
10. Глубокая нейроэволюция.
11. Лучшие методы, советы и подсказки.
12. Заключительные замечания.","https://t.me/JuliaLibrary/39","ml_cat"
31,"Нильсен - Анализ временных рядов","""Незаурядное издание! Рано или поздно любому специалисту по анализу данных приходится работать с временными рядами или с подобными им технологическими данными. В этой книге вы найдете детальное описание методологий машинного обучения и обработки временных данных, сопровождаемое великолепными примерами их практической реализации.""
Андреас В. Кемпа-Лир, старший преподаватель, факультет инженерных наук, Оклендский университет
Анализ временных рядов становится все более и более актуальным разделом науки о данных в связи с широким распространением Интернета вещей, переходом здравоохранения на исключительно цифровой учет данных и ростом умных городов. Непрерывный мониторинг и сбор самых разных данных становятся повседневной действительностью и предопределяют постоянно растущую потребность в эффективных инструментах анализа временных рядов, основанных как на статистических методах, так и на методах машинного обучения.
В этом практическом руководстве описаны современные технологии анализа данных временных рядов и приведены примеры их практического использования в самых разных предметных областях. Оно призвано помочь в решении наиболее распространенных задач исследования и обработки временных рядов с помощью традиционных статистических методов и наиболее популярных моделей машинного обучения. В своей книге Эйлин Нильсен рассматривает самые распространенные и доступные инструменты анализа временных рядов, включенные в программные пакеты языков R и Python, которые могут применяться специалистами по работе с данными и разработчиками программного обеспечения для написания собственных эффективных решений.
Основные темы книги:
Поиск и извлечение временных рядов
Глубокое исследование временных рядов
Хранение временных данных
Моделирование данных временных рядов
Генерирование и отбор признаков для временных рядов
Классификация и прогнозирование временных рядов с помощью методов машинного и глубокого обучения
Оценка ошибок прогнозирования
Оценка точности и производительности моделей.","Деды явно знают больше, ждем от них ревью","1. Временные ряды: обзор и краткая история.
2. Распознавание и обработка временных рядов.
3. Методы исследования временных рядов.
4. Моделирование временных рядов.
5. Хранение временных рядов.
6. Статические модели для временных рядов.
7. Модели пространства состояний для временных рядов.
8. Генерация и выбор признаков для временных рядов.
9. Машинное обучение в анализе временнных рядов.
10. Глубокое обучение для временных рядов.
11. Оценка ошибок.
12. Производительность моделей временных рядов.
13. Медицинские приложения.
14. Финансовые приложения.
15. Временные ряды в государственном управлении.
16. Пакеты для анализа временных рядов.
17. Прогнозы о прогнозировании.","https://t.me/JuliaLibrary/40","ml_cat"
32,"Кайзер - Кванотовые вычисления ","Квантовые компьютеры обеспечивают радикальный скачок в скорости и вычислительной мощи. Совсем скоро могут появиться усовершенствованные научные модели и новые рубежи в криптографии, которые были немыслимы при использовании классических вычислений. Комплект инструментов для квантовой разработки от компании Microsoft и язык Q# предоставляют вам возможность поупражняться в квантовых вычислениях, даже если вы не знаете математику или физику на продвинутом уровне.
В этой книге квантовые технологии обсуждаются с практической точки зрения. Используя Python, вы сможете создать собственный квантовый симулятор, а задействуя инструменты с открытым исходным кодом от Microsoft - тонко настроить квантовые алгоритмы. Авторы покажут, как применять квантовые методы для решения практических задач, в том числе для отправки секретных сообщений.
Издание предназначено для разработчиков программно-информационного обеспечения. Предварительного опыта работы с квантовыми вычислениями не требуется.","Деды явно знают больше, ждем от них ревью","1. Введение в квантовые вычисления.
2. Кубиты: строительные блоки.
3. Обмен секретами с помощью квантового распределения ключей.
4. Нелокальные игры: работа с несколькими кубитами.
5. Нелокальные игры: имплементирование многокубитового симулятора.
6. Телепортация и запутанность: перемещение квантовых данных с места на место.
7. Перевес в другую пользу: введение в язык программирования Q#.
8. Что такое квантовый алгоритм.
9. Квантовая телеметрия: это не просто фаза.
10. Решение химических задач с помощью квантовых компьютеров.
11. Поиск с помощью квантовых компьютеров.
12. Арифметика с помощью квантовых компьютеров.
","https://t.me/JuliaLibrary/42","??????
"
33,"Дауни - Основы Python
","Практическое руководство по основам Python — самого популярного на данный момент и простого для изучения языка программирования.
Автор последовательно раскрывает все важные темы от самых простых к сложным, приводит множество примеров и заданий. При этом он пользуется понятным языком, и вам не потребуются специальные навыки или серьезные математические знания. Книга подходит новичкам и тем, кто уже что-то умеет, но хотел бы структурировать свои знания или иметь под рукой справочник.
Кроме того, эта книга меняет мышление. Когда вы научитесь понимать базовые принципы программирования, то сможете по-другому смотреть на многие задачи, даже не касающиеся компьютерной области.
Для кого книга
Для тех, кто интересуется программированием на любых языках
Для начинающих программистов, изучающих Python
Для тех, кто хочет научиться программировать с нуля.
2-е издание.","Деды явно знают больше, ждем от них ревью","1. Путь разработки.
2. Переменные, выражения и инструкция.
3. Функции.
4. Практический пример: разработка и интерфейс.
5. Условия и рекурсия.
6. Функции, возвращающие значение.
7. Итерации.
8. Строки.
9. Практический пример: игра слов.
10. Списки.
11. Словари.
12. Кортежи.
13. Практический пример: выбор структуры данных.
14. Файлы.
15. Классы и объекты.
16. Классы и функции.
17. Классы и методы.
18. Наследование.
19. Синтаксический сахар.
20. Отладка.
21. Анализ алгоритмов.","https://t.me/JuliaLibrary/44","pybook_cat"
34,"Грессер - Теория и практика ","Глубокое обучение с подкреплением (глубокое RL) сочетает в себе два подхода к машинному обучению. В ходе такого обучения виртуальные агенты учатся решать последовательные задачи о принятии решений. За последнее десятилетие было много неординарных достижений в этой области — от однопользовательских и многопользовательских игр, таких как го и видеоигры Atari и Dota 2, до робототехники.Эта книга — введение в глубокое обучение с подкреплением, уникально комбинирующее теорию и практику. Авторы начинают повествование с базовых сведений, затем подробно объясняют теорию алгоритмов глубокого RL, демонстрируют их реализации на примере программной библиотеки SLM Lab и напоследок описывают практические аспекты использования глубокого RL.Руководство идеально подойдет как для студентов, изучающих компьютерные науки, так и для разработчиков программного обеспечения, которые знакомы с основными принципами машинного обучения и знают Python.","Деды явно знают больше, ждем от них ревью","1. Введение в обучение с подкрепление.
2. REINFORCE.
3. SARSA.
4. Глубокие Q-сети.
5. Улучшение DQN.
6. Методы актора-критика с преимуществом (A2C).
7. Оптимизация ближайшей стратегии.
8. Методы параллелизации.
9. Сравнительный анализ алгоритмов.
10. Начало работы с глубоким RL.
11. SLM Lab.
12. Архитектура сетей.
13. Аппаратное обеспечение.
14. Состояния.
15. .Действия
16. Вознаграждения.
17. Функция переходов.","https://t.me/JuliaLibrary/45","pybook_cat"
